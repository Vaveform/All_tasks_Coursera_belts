#include <iostream>
#include <map>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

void PrintVector(const vector<string>& w)
{
	for(const auto& elem: w)
	{
		cout << elem << " ";
	}
	cout << endl;
}
vector<string> Write_Stops(const map<string, vector<string>>& routes,string stop)
{
	vector<string> result;
	for(const auto& item: routes)
	{
		if(count(item.second.begin(), item.second.end(), stop) > 0)
		{
			result.push_back(item.first);
		}
	}
	return result;
}
void new_bus(map<string, vector<string>>& routes, int& size ,string bus)
{
	vector<string> stops;
	string stop;
	while(size > 0)
	{
		cin >> stop;
		stops.push_back(stop);
		size--;
	}
	routes[bus] = stops;
	stops.clear();
}

void buses_for_stop(const map<string, vector<string>>& routes,string stop)
{
	vector<string> res = Write_Stops(routes, stop);
	if(res.size() != 0)
	{
		PrintVector(res);
	}
	else
	{
		cout << "No stop" << endl;
	}
}
void stops_for_bus(const map<string, vector<string>>& routes, string bus)
{

}
void all_buses(map<string, vector<string>>& routes)
{
	if(routes.size() > 0)
	{
	    for(auto& item: routes)
	    {
		    cout << "Bus " << item.first << ": ";
		    PrintVector(item.second);
	    }
	}
	else
	{
		cout << "No buses" << endl;
	}
}
int main()
{
	map<string, vector<string>> routes;
	int num_of_operation;
	cin >> num_of_operation;
	while(num_of_operation > 0)
	{
		string operation;
		cin >> operation;
		if(operation == "NEW_BUS")
		{
			string name_route;
			int num_of_routes;
			cin >> name_route;
			cin >> num_of_routes;
			new_bus(routes, num_of_routes, name_route);
		}
		else if(operation == "BUSES_FOR_STOP")
		{
			string stop;
			cin >> stop;
			buses_for_stop(routes, stop);
		}
		else if(operation == "STOPS_FOR_BUS")
		{
			string bus;
			cin >> bus;
			stops_for_bus(routes, bus);
		}
		else
		{
			all_buses(routes);
		}
		num_of_operation--;
	}
	return 0;
}
