#pragma once

#include <cstdlib>

// – –µ–∞–ª–∏–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω SimpleVector
template <typename T>
class SimpleVector {
public:
  SimpleVector(){
	  data = nullptr;
	  in_size = 0;
  }
  explicit SimpleVector(size_t size){
	  data = new T[size];
	  in_size = size;
  }
  ~SimpleVector();

  T& operator[](size_t index);

  T* begin();
  T* end();

  size_t Size() const;
  size_t Capacity() const;
  void PushBack(const T& value);

private:
  T* data;
  size_t in_size;
};
