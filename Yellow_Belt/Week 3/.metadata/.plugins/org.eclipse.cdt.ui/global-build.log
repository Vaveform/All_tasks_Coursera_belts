00:23:56 **** Rebuild of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
00:24:03 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
00:30:55 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp:1:9: warning: #pragma once in main file
 #pragma once
         ^~~~
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:23:9: error: 'invalid_argument' was not declared in this scope
   throw invalid_argument("invalid number");
         ^~~~~~~~~~~~~~~~
00:31:37 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp:1:9: warning: #pragma once in main file
 #pragma once
         ^~~~
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:23:14: error: 'invalid_argument' is not a member of 'std'
   throw std::invalid_argument("invalid number");
              ^~~~~~~~~~~~~~~~
00:32:42 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:22:9: error: 'invalid_argument' was not declared in this scope
   throw invalid_argument("fdfdfw");
         ^~~~~~~~~~~~~~~~
00:33:44 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:22:9: error: 'invalid_argument' was not declared in this scope
   throw invalid_argument();
         ^~~~~~~~~~~~~~~~
00:34:21 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:22:9: error: 'invalid_argument' was not declared in this scope
   throw invalid_argument("Invalid number");
         ^~~~~~~~~~~~~~~~
00:37:14 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:22:14: error: 'invalid_argument' is not a member of 'std'
   throw std::invalid_argument("Invalid syntax.");
              ^~~~~~~~~~~~~~~~
00:37:37 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:21:14: error: 'invalid_argument' is not a member of 'std'
   throw std::invalid_argument("Invalid syntax.");
              ^~~~~~~~~~~~~~~~
00:38:54 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
00:45:33 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:25:19: warning: comparison of integer expressions of different signedness: 'int' and 'std::__cxx11::basic_string<char>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]
  for(int i=1; i+1 < international_number.size(); i++)
               ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\phone_number.cpp:30:50: error: no matching function for call to 'std::__cxx11::basic_string<char>::append(const value_type&)'
   new_country_code.append(international_number[i]);
                                                  ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1244:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]' <near match>
       append(const _CharT* __s)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1244:7: note:   conversion of argument 1 would be ill-formed:
..\src\phone_number.cpp:30:50: error: invalid conversion from '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' {aka 'char'} to 'const char*' [-fpermissive]
   new_country_code.append(international_number[i]);
                                                  ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1202:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
       append(const basic_string& __str)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1202:7: note:   no known conversion for argument 1 from 'const value_type' {aka 'const char'} to 'const std::__cxx11::basic_string<char>&'
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1219:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(const basic_string& __str, size_type __pos, size_type __n)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1219:7: note:   candidate expects 3 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1231:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(const _CharT* __s, size_type __n)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1231:7: note:   candidate expects 2 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1261:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(size_type __n, _CharT __c)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1261:7: note:   candidate expects 2 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1271:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
       append(initializer_list<_CharT> __l)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1271:7: note:   no known conversion for argument 1 from 'const value_type' {aka 'const char'} to 'std::initializer_list<char>'
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1290:9: note: candidate: 'template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
         append(_InputIterator __first, _InputIterator __last)
         ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1290:9: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:30:50: note:   candidate expects 2 arguments, 1 provided
   new_country_code.append(international_number[i]);
                                                  ^
00:46:34 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:30:50: error: no matching function for call to 'std::__cxx11::basic_string<char>::append(const value_type&)'
   new_country_code.append(international_number[i]);
                                                  ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1244:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]' <near match>
       append(const _CharT* __s)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1244:7: note:   conversion of argument 1 would be ill-formed:
..\src\phone_number.cpp:30:50: error: invalid conversion from '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' {aka 'char'} to 'const char*' [-fpermissive]
   new_country_code.append(international_number[i]);
                                                  ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1202:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
       append(const basic_string& __str)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1202:7: note:   no known conversion for argument 1 from 'const value_type' {aka 'const char'} to 'const std::__cxx11::basic_string<char>&'
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1219:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(const basic_string& __str, size_type __pos, size_type __n)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1219:7: note:   candidate expects 3 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1231:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(const _CharT* __s, size_type __n)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1231:7: note:   candidate expects 2 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1261:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(size_type __n, _CharT __c)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1261:7: note:   candidate expects 2 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1271:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
       append(initializer_list<_CharT> __l)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1271:7: note:   no known conversion for argument 1 from 'const value_type' {aka 'const char'} to 'std::initializer_list<char>'
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1290:9: note: candidate: 'template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
         append(_InputIterator __first, _InputIterator __last)
         ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1290:9: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:30:50: note:   candidate expects 2 arguments, 1 provided
   new_country_code.append(international_number[i]);
                                                  ^
00:47:02 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp:18:1: error: no declaration matches 'PhoneNumber::PhoneNumber(std::__cxx11::string&)'
 PhoneNumber::PhoneNumber(string &international_number)
 ^~~~~~~~~~~
In file included from ..\src\phone_number.cpp:1:
..\src\phone_number.h:8:7: note: candidates are: 'PhoneNumber::PhoneNumber(PhoneNumber&&)'
 class PhoneNumber {
       ^~~~~~~~~~~
..\src\phone_number.h:8:7: note:                 'PhoneNumber::PhoneNumber(const PhoneNumber&)'
In file included from ..\src\phone_number.cpp:1:
..\src\phone_number.h:25:12: note:                 'PhoneNumber::PhoneNumber(const string&)'
   explicit PhoneNumber(const string &international_number);
            ^~~~~~~~~~~
In file included from ..\src\phone_number.cpp:1:
..\src\phone_number.h:8:7: note: 'class PhoneNumber' defined here
 class PhoneNumber {
       ^~~~~~~~~~~
00:47:55 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:31:33: error: no matching function for call to 'std::__cxx11::basic_string<char>::append(__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type&)'
   new_country_code.append(tmp[i]);
                                 ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1244:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]' <near match>
       append(const _CharT* __s)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1244:7: note:   conversion of argument 1 would be ill-formed:
..\src\phone_number.cpp:31:33: error: invalid conversion from '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' {aka 'char'} to 'const char*' [-fpermissive]
   new_country_code.append(tmp[i]);
                                 ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1202:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
       append(const basic_string& __str)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1202:7: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' {aka 'char'} to 'const std::__cxx11::basic_string<char>&'
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1219:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(const basic_string& __str, size_type __pos, size_type __n)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1219:7: note:   candidate expects 3 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1231:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(const _CharT* __s, size_type __n)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1231:7: note:   candidate expects 2 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1261:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long long unsigned int]'
       append(size_type __n, _CharT __c)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1261:7: note:   candidate expects 2 arguments, 1 provided
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1271:7: note: candidate: 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
       append(initializer_list<_CharT> __l)
       ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1271:7: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' {aka 'char'} to 'std::initializer_list<char>'
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1290:9: note: candidate: 'template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
         append(_InputIterator __first, _InputIterator __last)
         ^~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:1290:9: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:31:33: note:   candidate expects 2 arguments, 1 provided
   new_country_code.append(tmp[i]);
                                 ^
00:48:47 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
00:49:19 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:07:49 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
..\src\phone_number.cpp: In constructor 'PhoneNumber::PhoneNumber(const string&)':
..\src\phone_number.cpp:42:51: error: no match for 'operator==' (operand types are 'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} and 'int')
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                     ~~~~~~~~~~~~~~^~~~
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:64,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_pair.h:443:5: note: candidate: 'template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)'
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_pair.h:443:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::pair<_T1, _T2>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:299:5: note: candidate: 'template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)'
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:299:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::reverse_iterator<_Iterator>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:337:5: note: candidate: 'template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)'
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:337:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::reverse_iterator<_Iterator>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1112:5: note: candidate: 'template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)'
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1112:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::move_iterator<_IteratorL>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1118:5: note: candidate: 'template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)'
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1118:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::move_iterator<_IteratorL>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:40,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/postypes.h:216:5: note: candidate: 'template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)'
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::fpos<_StateT>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:41,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:146:5: note: candidate: 'template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)'
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::allocator<_CharT>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:41,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:152:5: note: candidate: 'template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)'
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::allocator<_CharT>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6009:5: note: candidate: 'template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)'
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6009:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'int'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6017:5: note: candidate: 'template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)'
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6017:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'int'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6031:5: note: candidate: 'template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)'
     operator==(const _CharT* __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6031:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   mismatched types 'const _CharT*' and 'std::__cxx11::basic_string<char>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6043:5: note: candidate: 'template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)'
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6043:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   mismatched types 'const _CharT*' and 'int'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:860:5: note: candidate: 'template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)'
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:860:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:867:5: note: candidate: 'template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)'
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:867:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32/bits/c++allocator.h:33,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:46,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:41,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h:155:5: note: candidate: 'template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)'
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h:155:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:54: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const __gnu_cxx::new_allocator<_Tp>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                      ^
..\src\phone_number.cpp:42:76: error: no match for 'operator==' (operand types are 'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} and 'int')
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                           ~~~~~~~~~~~~~~~~~^~~~
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:64,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_pair.h:443:5: note: candidate: 'template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)'
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_pair.h:443:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::pair<_T1, _T2>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:299:5: note: candidate: 'template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)'
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:299:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::reverse_iterator<_Iterator>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:337:5: note: candidate: 'template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)'
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:337:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::reverse_iterator<_Iterator>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1112:5: note: candidate: 'template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)'
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1112:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::move_iterator<_IteratorL>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1118:5: note: candidate: 'template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)'
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:1118:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::move_iterator<_IteratorL>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:40,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/postypes.h:216:5: note: candidate: 'template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)'
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::fpos<_StateT>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:41,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:146:5: note: candidate: 'template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)'
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::allocator<_CharT>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:41,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:152:5: note: candidate: 'template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)'
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const std::allocator<_CharT>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6009:5: note: candidate: 'template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)'
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6009:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'int'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6017:5: note: candidate: 'template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)'
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6017:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'int'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6031:5: note: candidate: 'template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)'
     operator==(const _CharT* __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6031:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   mismatched types 'const _CharT*' and 'std::__cxx11::basic_string<char>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:52,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6043:5: note: candidate: 'template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)'
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/basic_string.h:6043:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   mismatched types 'const _CharT*' and 'int'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:860:5: note: candidate: 'template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)'
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:860:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_algobase.h:67,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/char_traits.h:39,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:40,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:867:5: note: candidate: 'template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)'
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h:867:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
In file included from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32/bits/c++allocator.h:33,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/allocator.h:46,
                 from C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/string:41,
                 from ..\src\phone_number.h:3,
                 from ..\src\phone_number.cpp:1:
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h:155:5: note: candidate: 'template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)'
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
C:/dev/mingw64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h:155:5: note:   template argument deduction/substitution failed:
..\src\phone_number.cpp:42:79: note:   'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} is not derived from 'const __gnu_cxx::new_allocator<_Tp>'
  if(new_country_code.size() == 0 || new_city_code == 0 || new_local_number == 0){
                                                                               ^
01:08:10 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:08:22 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:17:50 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
..\src\main.cpp:2:10: fatal error: phone_number.h: No such file or directory
 #include <phone_number.h>
          ^~~~~~~~~~~~~~~~
compilation terminated.
01:17:55 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
..\src\main.cpp:2:10: fatal error: phone_number.h: No such file or directory
 #include <phone_number.h>
          ^~~~~~~~~~~~~~~~
compilation terminated.
01:18:20 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
Info: Nothing to build for Class_in_two_files
Info: Nothing to build for Class_in_two_files
01:25:49 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:26:11 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:33:39 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:33:49 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:35:53 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:36:07 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:41:48 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:43:44 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\phone_number.o" "..\\src\\phone_number.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
01:46:01 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
..\src\main.cpp: In function 'int main()':
..\src\main.cpp:10:17: error: 'Test_to_good_numbers' was not declared in this scope
  runner.RunTest(Test_to_good_numbers, "Test_to_good_numbers");
                 ^~~~~~~~~~~~~~~~~~~~
01:46:26 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
..\src\main.cpp: In function 'int main()':
..\src\main.cpp:10:17: error: 'Test_to_good_numbers' was not declared in this scope
  runner.RunTest(Test_to_good_numbers, "Test_to_good_numbers");
                 ^~~~~~~~~~~~~~~~~~~~
01:46:44 **** Incremental Build of configuration Debug for project Class_in_two_files ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\main.o" "..\\src\\main.cpp" 
g++ -o Class_in_two_files.exe "src\\main.o" "src\\phone_number.o" 
