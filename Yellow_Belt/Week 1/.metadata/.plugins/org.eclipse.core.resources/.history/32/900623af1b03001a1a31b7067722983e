#include <iostream>
#include <tuple>
#include <cstdint>
#include <map>
#include <vector>
#include <string>

using namespace std;

enum class Lang {
  DE, FR, IT
};

struct Region {
  string std_name;
  string parent_std_name;
  map<Lang, string> names;
  int64_t population;
};

auto GetRank(const Region& region){
	return tie(region.std_name, region.parent_std_name,
			region.names, region.population);
}

bool operator==(const Region& lhs, const Region& rhs)
{
	return GetRank(lhs) == GetRank(rhs);
}

int FindMaxRepetitionCount(const vector<Region>& regions){
	if(regions.size() == 0){
		return 0;
	}
	return 1;
}

int main() {
	tuple t(7, "C++", true);
	cout << get<1>(t) << endl;
	return 0;
}
