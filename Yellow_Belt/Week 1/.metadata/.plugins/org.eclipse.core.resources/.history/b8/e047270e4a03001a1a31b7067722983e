#include <iostream>
#include <map>
#include <exception>
using namespace std;

template <typename Key, typename Value>
const Value& GetRefStrict(const map<Key, Value>& dict, Key key)
{
	if(dict.find(key) != dict.end()){
		Value val = dict.at(key);
		Value &ref = val;
		return ref;
	}
	else{
		throw runtime_error("Not found");
	}
}

int main() {
	return 0;
}
