#include <iostream>
#include <tuple>
#include <cstdint>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

auto GetRank(const Region& region){
	return tie(region.std_name, region.parent_std_name,
			region.names, region.population);
}

bool operator==(const Region& lhs, const Region& rhs)
{
	return GetRank(lhs) == GetRank(rhs);
}

bool operator<(const Region& lhs, const Region& rhs)
{
	return GetRank(lhs) < GetRank(rhs);
}

int FindMaxRepetitionCount(const vector<Region>& regions){
	if(regions.size() == 0){
		return 0;
	}
	else{
		map<Region, int> repeats;
		for(auto const& elem: regions)
		{
			if(repeats.find(elem) != repeats.end()){
				repeats[elem] += 1;
			}
			else{
				repeats[elem] = 1;
			}
		}
		return (*repeats.begin()).second;
	}
}

int main() {
	return 0;
}
